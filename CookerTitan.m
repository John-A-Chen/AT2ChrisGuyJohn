classdef CookerTitan< RobotBaseClass
    properties(Access = public)
        kr1000;
        plyFileNameStem = 'Titan2';
    end
    methods
        %% Define robot Function
        function self = CookerTitan(baseTr)
            self.CreateModel();
            if nargin < 1
                baseTr = eye(4);
            end
            self.model.base = self.model.base.T * baseTr;
            self.PlotAndColourRobot();
        end
        %% CreateModel
        function CreateModel(self)

            clear L

            L(1) = Revolute('d', 1.100, ...   
                'a', 0.600, ...               
                'alpha', -pi/2, ...        
                'I', [0, 0.35, 0, 0, 0, 0], ...
                'r', [0, 0, 0], ...       
                'm', 0, ...               
                'Jm', 200e-6, ...         
                'G', -62.6111, ...        
                'B', 1.48e-3, ...         
                'Tc', [0.395 -0.435], ... 
                'qlim', [-150, 150]* pi/180 ); 

            L(2) = Revolute('d', 0, 'a', 1.465, 'alpha', 0, ...
                'I', [0.13, 0.524, 0.539, 0, 0, 0], ...
                'r', [-0.3638, 0.006, 0.2275], ...
                'm', 17.4, ...
                'Jm', 200e-6, ...
                'G', 107.815, ...
                'B', .817e-3, ...
                'Tc', [0.126 -0.071], ...
                'qlim', [-40, 107.5]* pi/180 );

            L(3) = Revolute('d', 0, 'a', 0, 'alpha', pi/2,  ...
                'I', [0.066, 0.086, 0.0125, 0, 0, 0], ...
                'r', [-0.0203, -0.0141, 0.070], ...
                'm', 4.8, ...
                'Jm', 200e-6, ...
                'G', -53.7063, ...
                'B', 1.38e-3, ...
                'Tc', [0.132, -0.105], ...
                'qlim', [-200, 55]* pi/180 );

            L(4) = Revolute('d', 1.2, 'a', 0, 'alpha', -pi/2,  ...
                'I', [1.8e-3, 1.3e-3, 1.8e-3, 0, 0, 0], ...
                'r', [0, 0.019, 0], ...
                'm', 0.82, ...
                'Jm', 33e-6, ...
                'G', 76.0364, ...
                'B', 71.2e-6, ...
                'Tc', [11.2e-3, -16.9e-3], ...
                'qlim', [-350, 350]* pi/180);

            L(5) = Revolute('d', 0, 'a', 0, 'alpha', pi/2,  ...
                'I', [0.3e-3, 0.4e-3, 0.3e-3, 0, 0, 0], ...
                'r', [0, 0, 0], ...
                'm', 0.34, ...
                'Jm', 33e-6, ...
                'G', 71.923, ...
                'B', 82.6e-6, ...
                'Tc', [9.26e-3, -14.5e-3], ...
                'qlim', [-118, 118]* pi/180 );

            L(6) = Revolute('d', 0.372, 'a', 0, 'alpha', 0,  ...
                'I', [0.15e-3, 0.15e-3, 0.04e-3, 0, 0, 0], ...
                'r', [0, 0, 0.032], ...
                'm', 0.09, ...
                'Jm', 33e-6, ...
                'G', 76.686, ...
                'B', 36.7e-6, ...
                'Tc', [3.96e-3, -10.5e-3], ...
                'qlim', [-350, 350]* pi/180 );

            % some useful poses
            qz = [0 0 0 0 0 0]; % zero angles, L shaped pose
            qr = [0 pi/2 -pi/2 0 0 0]; % ready pose, arm up
            qs = [0 0 -pi/2 0 0 0];
            qn=[0 pi/4 pi 0 pi/4  0];

            self.kr1000 = SerialLink(L, 'name', 'KR 1000', ...
                'configs', {'qz', qz, 'qr', qr, 'qs', qs, 'qn', qn}, ...
                'manufacturer', 'Unimation', 'ikine', 'KR');

            self.kr1000.model3d = 'UNIMATE/KR1000';

            axis equal;
        end
    end
end